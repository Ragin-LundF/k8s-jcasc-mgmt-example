base:
    deploymentName: jenkins-controller
    domain: demo-qadomain.tld
    jenkinsURIPrefix: /jenkins
    ipAddress: 10.15.15.3
    namespace: demo-qa
    deploymentOnly: true
jcasc:
    clouds: {}
    credentialIDs:
        docker: docker-registry-credentialsid
        maven: repository-credentialsid
        npm: repository-credentialsid
        vcs: vcs-notification-credentialsid
    jobsConfig:
        seedJobRepository: https://github.com/Ragin-LundF/jenkins-jobdsl-remote.git
    securityRealm:
        localUsers:
            adminPassword: $2a$04$UNxiNvJN6R3me9vybVQr/OzpMhgobih8qbxDpGy3lZmmmwc6t48ty
            userPassword: $2a$04$BFPq6fSa9KGKrlIktz/C8eSFrrG/gglnW1eXWMSjgtCSx36mMOSNm
jenkinsHelmValues:
    controller:
        image: jenkins/jenkins
        tag: lts
        imagePullPolicy: Always
        customJenkinsLabel: jenkins-controller-for-seed
        authorizationStrategyAllowAnonymousRead: "true"
        adminPassword: admin
        sidecarsConfigAutoReloadFolder: https://raw.githubusercontent.com/Ragin-LundF/k8s-jcasc-project-config/main/{{ .Base.Namespace }}/jcasc_config.yaml
    persistence:
        accessMode: ReadWriteOnce
        storageSize: 1Gi
        storageClass: hostpath
persistentVolumeClaim:
    pvcSpec:
        accessMode: ReadWriteOnce
        storageClassName: hostpath
        resources:
            storageSize: 1Gi
nginx:
    ingress:
        annotationIngressClass: nginx
        deploymentName: nginx-ingress
        containerImage: bitnami/nginx-ingress-controller:latest
        enableControllerForNamespace: true
    loadBalancer:
        enabled: true
        annotations:
            externalDNSHostName: domain.tld
            externalDNSTtl: 60
        ports:
            http:
                port: 8081
                targetPort: 80
            https:
                port: 8444
                targetPort: 443
